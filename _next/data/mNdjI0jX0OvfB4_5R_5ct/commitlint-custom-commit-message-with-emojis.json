{"pageProps":{"postData":{"title":"Commitlint: custom commit message with emojis","date":"2022-01-11T00:00:00.000Z","description":"A guide to customize the commitlint to your need and use it as convention in your git repository. Customize commitlint header format to use emojis.","tags":["tools","git","npm"],"slug":"commitlint-custom-commit-message-with-emojis","contentHtml":"<p><a href=\"https://commitlint.js.org/\">Commitlint@16.0.2</a> is the next step on enforcing rules in your JS project after eslint.</p>\n<p>Installation and configuration is very simple:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"module.exports = {extends: ['@commitlint/config-conventional']}\"</span> <span class=\"token operator\">></span> commitlint.config.js\n</code></pre></div>\n<p>Commitlint suggests <a href=\"https://www.conventionalcommits.org/en/\">Conventional commits</a> which have this format:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">type(scope?): subject</code></pre></div>\n<p>But what if I want to use a custom format specific to my team?! Let's say I want to use emoji as a type, an optional ticket, and then the subject, like:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">type [ticket]? subject</code></pre></div>\n<p>To change the header format I need to change <code>headerPattern</code> from <code>parserOpts</code> config:</p>\n<p>First I need to find a RegExp that will match <code>\"‚úÖ [T-4605] Add tests\"</code>, also we need to add at least one rule so let's add <code>type-enum</code> that is <a href=\"https://commitlint.js.org/#/reference-rules\">provided by commitlint</a> to set allowed emojis</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// commitlint.config.js</span>\n<span class=\"token comment\">// emojis like \"‚úÖ \", \"üòÇ \", ...</span>\n<span class=\"token keyword\">const</span> matchAnyEmojiWithSpaceAfter <span class=\"token operator\">=</span>\n  <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(</span><span class=\"token escape\">\\u00a9</span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\u00ae</span><span class=\"token alternation keyword\">|</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\u2000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\u3300</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83c</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83d</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83e</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token group punctuation\">)</span><span class=\"token char-set class-name\">\\s</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> matchOptionalTicketNumberWithSpaceAfter <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(?:</span><span class=\"token special-escape escape\">\\[</span><span class=\"token group punctuation\">(</span>T-<span class=\"token char-set class-name\">\\d</span><span class=\"token quantifier number\">+</span><span class=\"token group punctuation\">)</span><span class=\"token special-escape escape\">\\]</span><span class=\"token char-set class-name\">\\s</span><span class=\"token group punctuation\">)</span><span class=\"token quantifier number\">?</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[T-4605] \", \"[T-1]\"</span>\n<span class=\"token keyword\">const</span> subjectThatDontStartWithBracket <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token char-class-negation operator\">^</span><span class=\"token special-escape escape\">\\[</span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">+</span><span class=\"token group punctuation\">)</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Add tests\" but don't allow \"[ Add tests\"</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">parserPreset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">parserOpts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">headerPattern</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"^\"</span> <span class=\"token operator\">+</span>\n          matchAnyEmojiWithSpaceAfter<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          matchOptionalTicketNumberWithSpaceAfter<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          subjectThatDontStartWithBracket<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">\"$\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">headerCorrespondence</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ticket\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"subject\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"type-enum\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"‚≠êÔ∏è\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"üêû\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"‚úÖ\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"üöß\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"‚ôªÔ∏è\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"üìù\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Testing locally:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"‚úÖ [T-4605] Add tests\"</span> <span class=\"token operator\">|</span> commitlint <span class=\"token comment\"># passes</span>\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"‚úÖ Add tests\"</span> <span class=\"token operator\">|</span> commitlint <span class=\"token comment\"># passes</span>\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Something else\"</span> <span class=\"token operator\">|</span> commitlint <span class=\"token comment\"># should fail but still passes ü§î</span>\n</code></pre></div>\n<p>The problem is that there is no rule to make sure that the header matched our RegExp. I can add 2 other rules from commitlint:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string-property property\">\"type-empty\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"never\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token string-property property\">\"subject-empty\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"never\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>but what if I have other variables names, <code>emoji</code> instead of <code>type</code>, <code>desc</code> instead of <code>subject</code>?</p>\n<p>I need to create a custom rule using <a href=\"https://commitlint.js.org/#/reference-plugins\">Commitlint plugins</a>.\nLet's name the rule <code>header-match-team-pattern</code> and also use <code>emoji</code> instead of <code>type</code>. In the rule, we check if all variables are <code>null</code> and return a message</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token spread operator\">...</span>\n      <span class=\"token literal-property property\">headerCorrespondence</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"emoji\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ticket\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"subject\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"header-match-team-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parsed</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> emoji<span class=\"token punctuation\">,</span> ticket<span class=\"token punctuation\">,</span> subject <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parsed<span class=\"token punctuation\">;</span>\n          \n          <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>emoji <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">&#x26;&#x26;</span> ticket <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">&#x26;&#x26;</span> subject <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"header must be in format '‚úÖ [T-4605] Add tests' or '‚úÖ Add tests'\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"header-match-team-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token spread operator\">...</span>\n</code></pre></div>\n<blockquote>\n<p>You can <code>console.log({ parsed })</code>, for debugging</p>\n</blockquote>\n<p>Now let's create a better <code>type-enum</code> rule, <code>explained-emoji-enum</code>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token spread operator\">...</span>\n        <span class=\"token string-property property\">\"explained-emoji-enum\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parsed<span class=\"token punctuation\">,</span> _when<span class=\"token punctuation\">,</span> emojisObject</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> emoji <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parsed<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>emoji <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">!</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>emojisObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">emoji must be one of:</span>\n<span class=\"token string\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>emojisObject<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">emojiType</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>emojiType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>emojisObject<span class=\"token punctuation\">[</span>emojiType<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token spread operator\">...</span>\n    <span class=\"token string-property property\">\"explained-emoji-enum\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"‚≠êÔ∏è\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"New feature\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üêû\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bugfix\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"‚úÖ\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Add, update tests\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üöß\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Work in progress\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"‚ôªÔ∏è\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Refactor\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üìù\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Documentation update\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token spread operator\">...</span>\n</code></pre></div>\n<p>And when the engineer will set a wrong emoji it will have a error like:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"üòÇ Add tests\"</span> <span class=\"token operator\">|</span> commitlint                                                                                                                                 \n‚ßó   input: üòÇ Add tests\n‚úñ   emoji must be one of:\n‚≠êÔ∏è - New feature\nüêû - Bugfix\n‚úÖ - Add, update tests\nüöß - Work <span class=\"token keyword\">in</span> progress\n‚ôªÔ∏è - Refactor\nüìù - Documentation update <span class=\"token punctuation\">[</span>explained-emoji-enum<span class=\"token punctuation\">]</span>\n\n‚úñ   found <span class=\"token number\">1</span> problems, <span class=\"token number\">0</span> warnings\n</code></pre></div>\n<h2>Final result</h2>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// commitlint.config.js</span>\n<span class=\"token comment\">// emojis like \"‚úÖ \", \"üòÇ \", ...</span>\n<span class=\"token keyword\">const</span> matchAnyEmojiWithSpaceAfter <span class=\"token operator\">=</span>\n  <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(</span><span class=\"token escape\">\\u00a9</span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\u00ae</span><span class=\"token alternation keyword\">|</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\u2000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\u3300</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83c</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83d</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token alternation keyword\">|</span><span class=\"token escape\">\\ud83e</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token range\"><span class=\"token escape\">\\ud000</span><span class=\"token range-punctuation operator\">-</span><span class=\"token escape\">\\udfff</span></span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token group punctuation\">)</span><span class=\"token char-set class-name\">\\s</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> matchOptionalTicketNumberWithSpaceAfter <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(?:</span><span class=\"token special-escape escape\">\\[</span><span class=\"token group punctuation\">(</span>T-<span class=\"token char-set class-name\">\\d</span><span class=\"token quantifier number\">+</span><span class=\"token group punctuation\">)</span><span class=\"token special-escape escape\">\\]</span><span class=\"token char-set class-name\">\\s</span><span class=\"token group punctuation\">)</span><span class=\"token quantifier number\">?</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[T-4605] \", \"[T-1]\"</span>\n<span class=\"token keyword\">const</span> subjectThatDontStartWithBracket <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token char-class-negation operator\">^</span><span class=\"token special-escape escape\">\\[</span><span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">+</span><span class=\"token group punctuation\">)</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Add tests\" but don't allow \"[ Add tests\"</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">parserPreset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">parserOpts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">headerPattern</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"^\"</span> <span class=\"token operator\">+</span>\n          matchAnyEmojiWithSpaceAfter<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          matchOptionalTicketNumberWithSpaceAfter<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          subjectThatDontStartWithBracket<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">\"$\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">headerCorrespondence</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"emoji\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ticket\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"subject\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"header-match-team-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parsed</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> emoji<span class=\"token punctuation\">,</span> ticket<span class=\"token punctuation\">,</span> subject <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parsed<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>emoji <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">&#x26;&#x26;</span> ticket <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">&#x26;&#x26;</span> subject <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"header must be in format '‚úÖ [T-4605] Add tests' or '‚úÖ Add tests'\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"explained-emoji-enum\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parsed<span class=\"token punctuation\">,</span> _when<span class=\"token punctuation\">,</span> emojisObject</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> emoji <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> parsed<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>emoji <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">!</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>emojisObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">emoji must be one of:</span>\n<span class=\"token string\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>emojisObject<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">emojiType</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>emojiType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>emojisObject<span class=\"token punctuation\">[</span>emojiType<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"header-match-team-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"explained-emoji-enum\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"‚≠êÔ∏è\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"New feature\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üêû\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bug fix\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"‚úÖ\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Add, update tests\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üöß\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Work in progress\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"‚ôªÔ∏è\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Refactor\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"üìù\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Documentation update\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>Next steps</h2>\n<p>I can add <a href=\"https://commitlint.js.org/#/reference-rules\">some rules from Commitlint</a> or create other custom ones.<br>\nPut the config in a <a href=\"https://commitlint.js.org/#/concepts-shareable-config\">new package</a>.<br>\nAdd <code>husky</code> and use it in every company repo on the pre-commit hook.</p>\n"},"_superjson":{"values":{"postData.date":["Date"]}}},"__N_SSG":true}