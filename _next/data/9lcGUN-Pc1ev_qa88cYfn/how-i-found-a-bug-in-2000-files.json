{"pageProps":{"postData":{"title":"How I found a bug in 2000 files","date":"2022-05-13T00:00:00.000Z","description":"A story how I found a bug in a change of 2000 files using bash, git commits and git bisect. Another title for this post cound be How to creat a commit per file that was changed.","tags":["development"],"slug":"how-i-found-a-bug-in-2000-files","contentHtml":"<p>I was adding a new eslint plugin that will sort imports in js/ts files.<br>\nAfter adding <a href=\"https://github.com/lydell/eslint-plugin-simple-import-sort\">eslint-plugin-simple-import-sort</a>,\nI run <code>eslint --fix</code> and found about 2000 files changed.\nAs there was only reorder of imports I thought that there should not be any issues.</p>\n<p>I was surprised when I found a very strange</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">TypeError: Cannot read properties of undefined</code></pre></div>\n<p>Reverting the import order did not help to fix the issue.<br>\nAnd now I started thinking  about how I can find the issue without going through all 2000 files.</p>\n<p>Then an idea came. As all changes are independent,\nI could do a commit for every file change and then run a <code>git bisect</code> and find the file that causes the problem.</p>\n<p>So I created a bash script that will get all file names from <code>git status</code> and create a commit with the file name:</p>\n<p>Let's see how:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> status <span class=\"token parameter variable\">--porcelain</span> <span class=\"token comment\"># prints git status in a format that can be parsed</span>\n<span class=\"token comment\"># M utils/index.ts</span>\n<span class=\"token comment\"># M components/Button.tsx</span>\n<span class=\"token comment\"># ...</span>\n</code></pre></div>\n<p>Then we pipe this result to <code>awk</code> and print only the file name:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> status <span class=\"token parameter variable\">--porcelain</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $2}'</span>\n<span class=\"token comment\"># utils/index.ts</span>\n<span class=\"token comment\"># components/Button.tsx</span>\n<span class=\"token comment\"># ...</span>\n</code></pre></div>\n<p>read each line (filename), and do a commit with <code>--no-verify</code> to not trigger pre-commit check:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token punctuation\">(</span>git status <span class=\"token parameter variable\">--porcelain</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $2}'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> \n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-r</span> line\n<span class=\"token keyword\">do</span>\n    <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token variable\">$line</span>\n    <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Add file <span class=\"token variable\">$line</span>\"</span> --no-verify\n<span class=\"token keyword\">done</span>\n</code></pre></div>\n<p>After running this script I had about 2000 commits where I could run <a href=\"https://git-scm.com/docs/git-bisect\"><code>git bisect</code></a> and find the issue.\n<code>git bisect</code> reduced the number of checks from <strong>2000</strong> (theoretically) to just <strong>11</strong>.</p>\n<p>I found the file that caused the issue, and it was completely unrelated to the file where the error was thrown.\nSo I just eslint ignored the sorting rule in that file (till later investigation).\nThen I did a soft reset to undo all 2000 commits and pushed a single commit that successfully adds the new eslint plugin and rules to the project.</p>\n"},"_superjson":{"values":{"postData.date":["Date"]}}},"__N_SSG":true}