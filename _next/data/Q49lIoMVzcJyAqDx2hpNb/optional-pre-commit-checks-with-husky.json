{"pageProps":{"postData":{"title":"Optional pre-commit checks with husky","date":"2022-03-31T00:00:00.000Z","description":"How to make your husky pre-commit optional for each check","tags":["git","node","tools"],"slug":"optional-pre-commit-checks-with-husky","contentHtml":"<p>If you are working on a JavaScript project, you probably are using husky to check your <a href=\"/commitlint-custom-commit-message-with-emojis\">commit messages</a>,\nmaybe do some Prettier, Eslint formatting, or TypeScript checks.</p>\n<p>Checking commit messages is fast, but running formatting and type checking takes more time as your project grows.</p>\n<p>You can use <a href=\"https://github.com/okonet/lint-staged\">lint-staged</a> for prettier and eslint,\nbut using it for TypeScript check makes no sense because if you change types in a git staged file it may break typing in another file.</p>\n<p>All engineers have different workflows. To fix an issue from the TypeScript compiler, you could run a <code>tsc --watch</code> process and make sure nothing is broken.</p>\n<p>I don't want to run <code>tsc --watch</code> because constantly running it slows the laptop. I don't mind if this check will be done at pre-commit stage even if the commit will take 10,20,30+ seconds.</p>\n<p>But how to make this pre-commit optional? So the teammates that do manually formatting and type checking will not be frustrated.</p>\n<p><a href=\"https://www.npmjs.com/package/husky\">husky</a> version 7 enables pre-commit configuration using a bash script. So why not do checking before running <code>tsc</code> or <code>lint-staged</code>?!</p>\n<p>This will be the beginning of the <code>.husky/pre-commit</code> file</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token assign-left variable\">APP_PRE_COMMIT_OPTIONS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/pre-commit.options\"</span>\n</code></pre></div>\n<p>So we can put our options in a file named <code>pre-commit.options</code> inside the <code>.husky/_/</code> folder.</p>\n<blockquote>\n<p><code>.husky/_/</code> should have a <code>.gitingore</code> file that will ignore our option file.</p>\n</blockquote>\n<p>Next, let's print some message if the options files do not exist</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">YELLOW</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[1;33m\"</span>\n<span class=\"token assign-left variable\">GREEN</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[1;32m\"</span>\n<span class=\"token assign-left variable\">RESET</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[0m\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"<span class=\"token variable\">$APP_PRE_COMMIT_OPTIONS</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${YELLOW}</span><span title=\"\\n\" class=\"token entity\">\\n</span>Skipping pre-commit hook.\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"If you want to use pre-commit for TypeScript check and lint-staged, run:<span title=\"\\n\" class=\"token entity\">\\n</span>\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"  <span class=\"token variable\">${GREEN}</span>echo -e 'APP_TS=true;<span title=\"\\\\\" class=\"token entity\">\\\\</span><span title=\"\\n\" class=\"token entity\">\\n</span>APP_LINT=true;' > <span class=\"token variable\">$P_APP_PRE_COMMIT_OPTIONS</span><span class=\"token variable\">${RESET}</span>\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${YELLOW}</span><span class=\"token punctuation\">\\</span>nIt will <span class=\"token function\">add</span> some delay before committing<span class=\"token operator\">!</span><span class=\"token punctuation\">\\</span>n<span class=\"token variable\">${RESET}</span>\"\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">fi</span>\n\n</code></pre></div>\n<p><img src=\"/optional-pre-commit.png\" alt=\"optional-pre-commit\"></p>\n<p>Now, let's source the options file and check if the user enabled the linting:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> <span class=\"token variable\">$APP_PRE_COMMIT_OPTIONS</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">${APP_LINT}</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">${APP_LINT}</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"true\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${GREEN}</span>[husky] [pre-commit] [lint-staged]<span class=\"token variable\">${RESET}</span>\"</span>\n  npx lint-staged\n<span class=\"token keyword\">fi</span>\n</code></pre></div>\n<p>You can add more options and checks if needed!</p>\n<h2>Final result</h2>\n<p>The <code>.husky/pre-commit</code> file should look similar to this:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token assign-left variable\">APP_PRE_COMMIT_OPTIONS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/pre-commit.options\"</span>\n\n<span class=\"token assign-left variable\">YELLOW</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[1;33m\"</span>\n<span class=\"token assign-left variable\">GREEN</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[1;32m\"</span>\n<span class=\"token assign-left variable\">RESET</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span title=\"\\033\" class=\"token entity\">\\033</span>[0m\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"<span class=\"token variable\">$APP_PRE_COMMIT_OPTIONS</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${YELLOW}</span><span title=\"\\n\" class=\"token entity\">\\n</span>Skipping pre-commit hook.\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"If you want to use pre-commit for TypeScript check and lint-staged, run:<span title=\"\\n\" class=\"token entity\">\\n</span>\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"  <span class=\"token variable\">${GREEN}</span>echo -e 'APP_TS=true;<span title=\"\\\\\" class=\"token entity\">\\\\</span><span title=\"\\n\" class=\"token entity\">\\n</span>APP_LINT=true;' > <span class=\"token variable\">$P_APP_PRE_COMMIT_OPTIONS</span><span class=\"token variable\">${RESET}</span>\"</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${YELLOW}</span><span class=\"token punctuation\">\\</span>nIt will <span class=\"token function\">add</span> some delay before committing<span class=\"token operator\">!</span><span class=\"token punctuation\">\\</span>n<span class=\"token variable\">${RESET}</span><span class=\"token string\">\"\n  exit 0\nfi\n\nsource <span class=\"token variable\">$APP_PRE_COMMIT_OPTIONS</span>\n\nif [ -n \"</span><span class=\"token variable\">${APP_TS}</span><span class=\"token string\">\" ] &#x26;&#x26; [ \"</span><span class=\"token variable\">${APP_TS}</span><span class=\"token string\">\" == \"</span><span class=\"token boolean\">true</span><span class=\"token string\">\" ]; then</span>\n<span class=\"token string\">  echo \"</span><span class=\"token variable\">${GREEN}</span><span class=\"token punctuation\">[</span>husky<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>pre-commit<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>tsc<span class=\"token punctuation\">]</span><span class=\"token variable\">${RESET}</span><span class=\"token string\">\"</span>\n<span class=\"token string\">  npx tsc</span>\n<span class=\"token string\">fi</span>\n<span class=\"token string\"></span>\n<span class=\"token string\">if [ -n \"</span><span class=\"token variable\">${APP_LINT}</span><span class=\"token string\">\" ] &#x26;&#x26; [ \"</span><span class=\"token variable\">${APP_LINT}</span><span class=\"token string\">\" == \"</span><span class=\"token boolean\">true</span><span class=\"token string\">\" ]; then</span>\n<span class=\"token string\">  echo \"</span><span class=\"token variable\">${GREEN}</span><span class=\"token punctuation\">[</span>husky<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>pre-commit<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>lint-staged<span class=\"token punctuation\">]</span><span class=\"token variable\">${RESET}</span>\"\n  npx lint-staged\n<span class=\"token keyword\">fi</span>\n</code></pre></div>\n"},"_superjson":{"values":{"postData.date":["Date"]}}},"__N_SSG":true}